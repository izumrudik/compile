
const stdin  0
const stdout 1
const stderr 2

fun puts string:str { write(stdout, string) }
fun eputs string:str { write(stderr, string) }
fun fputs fd:int string:str { write(fd, string) }
fun putendl {
	puts('\n')
}
fun putsln string:str {
	puts(string)
	putendl()
}

fun putd a:int{
	if a < 10 {
		puts(str(1, ptr('0123456789')+a))
	} else {
		putd(a//10)
		putd(a%10)
	}
}
#Timespec
struct Timespec {
        sec:int
        nsec:int
}

fun save_Timespec spec:ptr(Timespec) sec:int nsec:int {
        save_int(spec.sec, sec)
        save_int(spec.nsec, nsec)
}

fun sleep spec:ptr(Timespec) -> int {
	return nanosleep($ptr()(spec),$ptr()(0))
}

var __delay_local_spec Timespec
fun delay sec:int nsec:int -> int {
	save_Timespec(__delay_local_spec, sec, nsec)
	return sleep(__delay_local_spec)
}


#fcntl - manipulate file descriptor
const O_RDONLY   0    #@hex
const O_WRONLY   1    #@hex
const O_RDWR     2    #@hex
const O_CREAT    64   #@hex
const O_TRUNC    512  #@hex
const O_NONBLOCK 2048 #@hex

const F_SETFL 4
const F_GETFL 3
fun fd_getfl fd:int -> int{
	return fcntl(fd, F_GETFL, 0)#arg is ignored
}
fun fd_setfl fd:int arg:int -> int{
	return fcntl(fd, F_SETFL, arg)
}
#termios
const Termios_c_iflag 0
const Termios_c_oflag 4
const Termios_c_cflag 8
const Termios_c_lflag 12
const Termios_c_line  16
const Termios_c_cc    17
const Termios_size 60

const TIOCGWINSZ 21523 #@hex
const TCGETS 21505 #@hex
const TCSETS 21506 #@hex
const ICANON 2
const ECHO   8
const VTIME  5
const VMIN   6

const TCSAFLUSH 2
const TCSANOW 0
#std
fun noop {}

fun memcpy from:ptr to:ptr length:int {
	idx:int = 0
	while idx < length {
		char:int = load_byte(from+idx)
		save_byte(to+idx,char)
		idx=idx+1
	}
}

fun strcpy string:str to:ptr {
	memcpy(ptr(string),to,len(string))
}
fun save_char char:str to:ptr {
	save_byte(to, load_byte(ptr(char)))
}

fun nth_bit a:int n:int -> int { return ((a >> n) and 1) }

const u64_size  8
const int_size  u64_size
const bool_size u64_size
const ptr_size  u64_size
const str_size  u64_size * 2


var random_seed int
fun rand -> int {
    save_int(random_seed,(load_int(random_seed) * 1103515245 + 12345) and 2147483647)#@hex
    return load_int(random_seed);
}
